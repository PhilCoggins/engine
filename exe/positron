#! /usr/bin/env ruby

$LOAD_PATH.unshift(File.expand_path("../lib", File.dirname(__FILE__)))

require 'optparse'
require 'positron'

options = {}

OptionParser.new do |opts|

  options[:command] = ARGV.shift

  opts.banner = <<-HERE

  Usage:
    # Write default config file to path
    positron init [path]

    positron build [options]
    positron watch [options]

  HERE

  opts.on("-j", "--js", "#{options[:command]} Javascript") do |val|
    options[:js] = val
  end

  opts.on("-c", "--css", "#{options[:command]} Stylesheets") do |val|
    options[:css] = val
  end

  opts.on("-s", "--svg", "#{options[:command]} SVG") do |val|
    options[:svg] = val
  end

  opts.on("-o", "--output PATH", String, "Where should JS/SCSS/HTML files be written, (default: current directory)") do |path|
    options[:output_path] = path
  end

  opts.on("-c", "--config PATH", String, "Path to a config file (default: esvg.yml, config/esvg.yml)") do |path|
    options[:config_file] = path
  end

  opts.on("-v", "--version", "Print version") do |version|
    options[:version] = true
  end

  opts.on("-h", "--help", "Print this message") do |version|
    options[:help] = opts
  end

  if options[:command] == 'help'
    options[:help] = opts
  end
end.parse!

if options[:version]
  puts "Positron version #{Positron::VERSION}"
elsif options[:help]

  if options[:help]
    puts "Positron version #{Positron::VERSION}"
    puts options[:help]

    # Use this if commands get long
    #IO.popen("less", "w") do |f| 
      #f.puts "Positron version #{Positron::VERSION}"
      #f.puts options[:help]
    #end
  end
else
  Positron::run(options)
end
