#! /usr/bin/env ruby

$LOAD_PATH.unshift(File.expand_path("../lib", File.dirname(__FILE__)))

require 'optparse'
require 'megatron'

options = {assets: []}

def next_arg
  if ARGV.first && !ARGV.first.match(/^-/)
    ARGV.shift
  end
end

OptionParser.new do |opts|

  options[:help] = ARGV.shift if ARGV.first == 'help'

  if ARGV.empty?
    options[:help] = 'help' # show help as default subcommand
  else
    options[:command] = next_arg
  end

  opts.banner = Megatron::Help.banner(options[:command])

  if options[:command] == 'new'
    options[:name] = next_arg

    opts.on("-f", "--force", "overwrite existing files") do |val|
      options[:force] = true
    end
  end

  if options[:command] == 'npm'
    options[:cli_path] = next_arg || Dir.pwd
  end

  opts.on("-v", "--version", "Print version") do |version|
    options[:version] = true
  end

  opts.on("-h", "--help", "Print this message") do |version|
    options[:help] = opts
    options[:command] = 'help'
  end

  if options[:help] == 'help'
    options[:help] = opts
  end
end.parse!

if options[:version]
  puts "Megatron version #{Megatron::VERSION}"
elsif options[:help]

  if options[:help]
    puts "Megatron version #{Megatron::VERSION}\n\n"
    puts options[:help]

    # Use this if commands get long
    #IO.popen("less", "w") do |f| 
      #f.puts "Megatron version #{Megatron::VERSION}"
      #f.puts options[:help]
    #end
  end
else
  Megatron::Command.run(options)
end
